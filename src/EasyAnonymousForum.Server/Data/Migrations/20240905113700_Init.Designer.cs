// <auto-generated />
using System;
using EasyAnonymousForum.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EasyAnonymousForum.Server.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240905113700_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EasyAnonymousForum.Server.Models.Comment", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<Instant>("DatePosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_posted")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("ThreadId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("thread_id");

                    b.HasKey("Id")
                        .HasName("pk_comments");

                    b.HasIndex("ThreadId")
                        .HasDatabaseName("ix_comments_thread_id");

                    b.ToTable("comments", (string)null);
                });

            modelBuilder.Entity("EasyAnonymousForum.Server.Models.ForumThread", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("body");

                    b.Property<Instant>("DatePosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_posted")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<string>("TopicId")
                        .HasColumnType("text")
                        .HasColumnName("topic_id");

                    b.HasKey("Id")
                        .HasName("pk_threads");

                    b.HasIndex("Title")
                        .HasDatabaseName("ix_threads_title")
                        .HasAnnotation("Npgsql:TsVectorConfig", "english");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Title"), "GIN");

                    b.HasIndex("TopicId")
                        .HasDatabaseName("ix_threads_topic_id");

                    b.ToTable("threads", (string)null);
                });

            modelBuilder.Entity("EasyAnonymousForum.Server.Models.Topic", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<Instant?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_topics");

                    b.ToTable("topics", (string)null);
                });

            modelBuilder.Entity("EasyAnonymousForum.Server.Models.Comment", b =>
                {
                    b.HasOne("EasyAnonymousForum.Server.Models.ForumThread", "Thread")
                        .WithMany()
                        .HasForeignKey("ThreadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_comments_threads_thread_id");

                    b.Navigation("Thread");
                });

            modelBuilder.Entity("EasyAnonymousForum.Server.Models.ForumThread", b =>
                {
                    b.HasOne("EasyAnonymousForum.Server.Models.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .HasConstraintName("fk_threads_topics_topic_id");

                    b.Navigation("Topic");
                });
#pragma warning restore 612, 618
        }
    }
}
